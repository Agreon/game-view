name: "CI"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'
    types:
      - opened
      - synchronize
      - reopened
      - labeled

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: game_watch
          POSTGRES_USER: game_watch
          POSTGRES_PASSWORD: game_watch
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 5s
          --health-timeout 10s
          --health-retries 5
      redis:
        image: bitnami/redis:7.0
        env:
          REDIS_PASSWORD: test
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        if: contains(github.event.pull_request.labels.*.name, 'dependencies') == false
        run: pnpm install

      - name: Install dependencies
        if: contains(github.event.pull_request.labels.*.name, 'dependencies')
        run: pnpm install --no-frozen-lockfile

      - name: Build
        run: |
          cp .env.dist .env
          cp .env client/.env.local
          pnpm build

      - name: Lint
        run: pnpm lint

      - name: Test
        run: pnpm test


  build-docker:
    name: Build Docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: |
          cp .env.dist .env
          cp .env client/.env.local
          COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose build
